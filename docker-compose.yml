version: '3.9'

services:
    db:
        image: postgres:15-alpine
        volumes:
          - postgres_data:/var/lib/postgresql/data
        environment:
          - POSTGRES_DB=pimarket
          - POSTGRES_USER=pimarket
          - POSTGRES_PASSWORD=pimarket123
        ports:
          - "5432:5432"
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U pimarket"]
          interval: 5s
          timeout: 5s
          retries: 5
    redis:
       image: redis:7-alpine
       ports:
         - "6379:6379"
       healthcheck:
         test: ["CMD", "redis-cli", "ping"]
         interval: 5s
         timeout: 3s
         retries: 5
    django:
       build:
         context: .
         dockerfile: docker/django/Dockerfile
       command: >
         sh -c "python manage.py migrate && 
                python manage.py collectstatic --noinput &&
                python manage.py runserver 0.0.0.0:8000"

       volumes:
         - .:/app
         - static_volume:/app/staticfiles
         - media_volume:/app/media
       ports:
         - "8000:8000"
       env_file:
         - .env
       depends_on:
         db:
           condition: service_healthy
         redis:
           condition: service_healthy
    celery_worker:
      build:
        context: .
        dockerfile: docker/django/Dockerfile
      command: celery -A pimarket worker --loglevel=info
      volumes:
        - .:/app
      env_file:
        - .env
      depends_on:
        - db
        - redis
        - django
    celery_beat:
      build:
        context: .
        dockerfile: docker/django/Dockerfile
      command: celery -A pimarket beat --loglevel=info
      volumes:
        - .:/app
      env_file:
        - .env
      depends_on:
        - db
        - redis
        - django
    nginx:
      build:
        context: .
        dockerfile: docker/nginx/Dockerfile
      ports:
        - "80:80"
      volumes:
        - static_volume:/app/staticfiles
        - media_volume:/app/media
      depends_on:
        - django
volumes:
  postgres_data:
  static_volume:
  media_volume:
